#!/usr/bin/env node

import { program } from 'commander';
import * as process from 'process';
import {
  accessSync,
  constants,
  existsSync,
  readFileSync,
  readSync,
  writeFileSync,
} from 'fs';
import { exit } from 'process';
import { EOL } from 'os';
import { execSync } from 'child_process';
import path = require('path');

program
  .version('0.0.1')
  .description(
    'Merge all defined prisma *.schema files into one big prisma.schema file.',
  )
  .option(
    '-i, --input <path>',
    'Path of the PrisMerge File with all the configuration',
    './prismerge.json',
  )
  .option('-nF, --no-format', 'Format the Prisma File after generation')
  .parse(process.argv);

const options = program.opts();

const basePath = path.join(process.cwd());
const inputPath = path.join(basePath, options.input);

if (!existsSync(inputPath)) {
  throw new Error(`Cannot read file ${inputPath}!`);
}

const prisMergeContent = JSON.parse(readFileSync(inputPath, 'utf8'));
const prismaSchemaInputFiles = prisMergeContent.input;
const prismaSchemaOutputFile = prisMergeContent.output;

let prismaContent = '';
prismaContent = prismaContent + '// WARNING' + EOL;
prismaContent =
  prismaContent + '// THIS FILE IS AUTOGENERATED BY PRISMERGE' + EOL;
prismaContent =
  prismaContent + '// DO NOT MANUALLY EDIT THIS FILE!' + EOL + EOL;

prismaSchemaInputFiles.forEach((schemaFile: string) => {
  const content = readFileSync(schemaFile, 'utf8');
  prismaContent = prismaContent + content;
});

writeFileSync(prismaSchemaOutputFile, prismaContent, { encoding: 'utf8' });

if (options.format) {
  execSync('npx prisma format');
}

exit(0);
